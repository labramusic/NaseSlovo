@model NaseSlovoApp.Models.Tekst

@{
    ViewBag.Title = "Details";
}

@{
    var result = "";
    if (IsPost)
    {
        var firstName = Request["FirstName"];

        var naslov = Model.Naslov;
        var sadrzaj = Model.Sadrzaj;
        var tekst = naslov + Environment.NewLine + Environment.NewLine + sadrzaj;

        var dataFile = Server.MapPath("~/App_Data/" + naslov + ".txt");
        File.WriteAllText(@dataFile, tekst);
        result = "Datoteka je preuzeta u folder App_Data.";
    }
}

@{
    bool hasRight = (bool)ViewData["HasRight"];
    bool objavljen = (bool)ViewData["Objavljen"];
    bool privatan = (bool)ViewData["Privatan"];
}


<div class="container">

    <div class="blog-header">
        <h1 class="blog-title">@Html.DisplayFor(model => model.Naslov)</h1>
        <p class="text-info">@Html.DisplayFor(model => model.DatumVrijeme) </p>
        <p>Autor: <span class="text-info">@Html.DisplayFor(model => model.Korisnik.Ime) @Html.DisplayFor(model => model.Korisnik.Prezime)</span></p>
    </div>

    <!-- sadrzaj -->
    <div class="col-sm-8 blog-main">
        <div class="blog-post">
            <p class="blog-post-meta">
                <button type="button" class="btn btn-outline btn-primary">@Html.DisplayFor(model => model.Tema.Naziv)</button>
                <button type="button" class="btn btn-outline btn-primary">@Html.DisplayFor(model => model.Vrsta.Naziv)</button>
            </p>
            <p>
                @Html.DisplayFor(model => model.Sadrzaj)
            </p>
            <br />
        </div>

        <!-- ocjena -->
        <table class="table table-striped table-hover">
            <tr class="info"></tr>
            <tr class="danger">
                <td><h5><b>Srednja ocjena:</b></h5></td>
                <td class="col-md-offset-2" style="text-align: right;"><h4><b>@Html.DisplayFor(model => model.SrednjaOcjena) / 10</b></h4></td>
            </tr>
            @if (hasRight)
            {
                <tr class="danger">
                    <td><h5>Moja ocjena:</h5></td>
                    <td class="col-md-4" style="text-align: right;">

                        @using (Html.BeginForm("Create", "OcjeneTekstova", FormMethod.Post, new { id = "Form Name" }))
                {
                            @Html.AntiForgeryToken()

                            @Html.Hidden("TekstID", @Html.DisplayFor(model => model.TekstID));

                            <div class="form-inline">
                                <div class="form-group">
                                    <div style="width: 100%;">
                                        @Html.DropDownList("Ocjena", new List<SelectListItem>
                 {
                    new SelectListItem{ Text="1", Value = "1" },
                    new SelectListItem{ Text="2", Value = "2" },
                    new SelectListItem{ Text="3", Value = "3" },
                    new SelectListItem{ Text="4", Value = "4" },
                    new SelectListItem{ Text="5", Value = "5" },
                    new SelectListItem{ Text="6", Value = "6" },
                    new SelectListItem{ Text="7", Value = "7" },
                    new SelectListItem{ Text="8", Value = "8" },
                    new SelectListItem{ Text="9", Value = "9" },
                    new SelectListItem{ Text="10", Value = "10" }
                 }, htmlAttributes: new { @class = "form-control" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-6">
                                        <input type="submit" class="btn btn-default" value="Ocijeni" />
                                    </div>
                                </div>
                            </div>
                        }

                    </td>
                </tr>
            }
        </table>

        <!-- download -->
        <form id="form_download" method="post" class="form-inline">
            <div class="form-group col-xs-10">
                <input type="submit" class="btn btn-default" value="Preuzmi" />
                @if (result != "")
                {
                    <p>@result</p>
                }

            </div>
        </form>

        <!-- urednik -->
        @if (User.IsInRole("Urednik"))
        {
            if (!objavljen)
            {
                using (Html.BeginForm("Details", "Tekstovi", FormMethod.Post, new { id = "Form name" }))
                {
                    @Html.Hidden("TekstID", @Html.DisplayFor(model => model.TekstID));

                    <div class="form-inline">
                        <div class="form-group">
                            <div class="col-xs-10 form-inline">
                                <input type="submit" class="btn btn-default" value="Prihvati" name="decision"
                                       style="float:left" />
                                <input type="submit" class="btn btn-default" value="Odbij" name="decision"
                                       style="float:left; width:100%; overflow:auto; display:block" />
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="form-inline">
                    @using (Html.BeginForm("Del", "Tekstovi", FormMethod.Post, new { id = "Form name" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.Hidden("TekstID", @Html.DisplayFor(model => model.TekstID));
                        <div class="form-group">
                            <div class="col-xs-10">
                                <input type="submit" class="btn btn-default" value="Izbriši tekst" name="delete" />
                            </div>
                        </div>
                    }

                    @using (Html.BeginForm("Details", "Tekstovi", FormMethod.Post, new { id = "Form name" }))
                    {
                        @Html.Hidden("TekstID", @Html.DisplayFor(model => model.TekstID));
                        <div class="form-group">
                            <div class="col-xs-10">
                                <select name="privatan">
                                    <option value="privatan">Privatan</option>
                                    <option value="javan">Javan</option>
                                </select>
                                <span><input type="submit" class="btn btn-default" value="Potvrdi" name="delete" /></span>
                            </div>
                        </div>
                    }
                </div>
            }
        }

        @if (User.IsInRole("Urednik") || User.IsInRole("Lektor"))
        {
            <h2>Lektorov komentar</h2>
            @Html.DisplayFor(modelItem => modelItem.LektorovKomentar)<br />
        }

        <h2>Komentari</h2>
        @foreach (var item in Model.Komentari)
        {
            <div class="row">
                <div class="col-lg-5">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <strong>@Html.DisplayFor(modelItem => item.Korisnik.KorisnickoIme)</strong>
                            <span class="text-muted">@Html.DisplayFor(modelItem => item.DatumVrijeme)</span>
                        </div>
                        <div class="panel-body">
                            @Html.DisplayFor(modelItem => item.Sadrzaj)
                        </div><!-- /panel-body -->
                    </div><!-- /panel panel-default -->
                </div><!-- /col-sm-5 -->
            </div>
        }

        @if (User.IsInRole("Lektor") && !objavljen)
        {
            using (Html.BeginForm("LektorKom", "Komentari", FormMethod.Post, new { id = "Form Name" }))
            {
                @Html.AntiForgeryToken()
                @Html.Hidden("TekstID", @Html.DisplayFor(model => model.TekstID));
                <div class="form-horizontal">
                    <h4>Lektorski komentar</h4>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Sadrzaj, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <!-- TODO sadrzaj makni, model komentara ne teksta-->

                            @Html.TextAreaFor(model => model.Sadrzaj, new { htmlAttributes = new { @class = "form-control", @Value = "Unesite komentar" } })
                            @Html.ValidationMessageFor(model => model.Sadrzaj, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Komentiraj" class="btn btn-default" />
                        </div>
                    </div>

                </div>
            }
        }
        else
        {
            <!-- ostali -->
            using (Html.BeginForm("Create", "Komentari", FormMethod.Post, new { id = "Form Name" }))
            {
                @Html.AntiForgeryToken()

                @Html.Hidden("TekstID", @Html.DisplayFor(model => model.TekstID));

                <div class="form-horizontal">
                    <div class="form-group">
                        <h4>Dodaj novi komentar</h4>

                        <!-- Html.LabelFor(model => model.Sadrzaj, htmlAttributes: new { class = "control-label col-md-2" }) -->

                        <div class="col-md-10">

                            @Html.TextAreaFor(model => model.Sadrzaj, 10, 100, new { htmlAttributes = new { @class = "form-control" } })

                            @Html.ValidationMessageFor(model => model.Sadrzaj, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-10">
                            <input type="submit" value="Komentiraj" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }
        }

    </div>
</div>